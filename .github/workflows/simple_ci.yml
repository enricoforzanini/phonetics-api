name: Deploy to Amazon EC2

on:
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: eu-north-1
  ECR_REPOSITORY: phonetics-api
  IMAGE_TAG: ${{ github.sha }}
  CONTAINER_NAME: phonetics-api

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'eu-north-1'


  deploy:
    name: Deploy to Amazon EC2
    needs: test
    runs-on: ubuntu-latest
    
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Build, tag, and push image to Amazon ECR
        run: |
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV

          
      
      - name: SSH and Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          envs: ECR_REGISTRY,ECR_REPOSITORY,IMAGE_TAG,CONTAINER_NAME,AWS_REGION
          script: |
            sudo apt-get update
            sudo apt-get install docker.io -y
            sudo apt-get install awscli -y
            sudo $(aws ecr get-login --no-include-email --region eu-north-1);
            echo "Executing Docker Login..."
            echo "ECR_REGISTRY: $ECR_REGISTRY"
            echo "ECR_REPOSITORY: $ECR_REPOSITORY"
            echo "IMAGE_TAG: $IMAGE_TAG"
            sudo docker pull "${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}"
            echo "Stopping existing container..."
            sudo docker stop $CONTAINER_NAME || true
            sudo docker rm $CONTAINER_NAME || true
            echo "Running new container..."
            echo ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
            sudo docker run -d \
              --log-driver=awslogs \
              --log-opt awslogs-region=${AWS_REGION} \
              --log-opt awslogs-group=log-phonetics \
              --log-opt awslogs-create-group=true \
              --name $CONTAINER_NAME -p 80:80 ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
            echo "Clean up"
            sudo docker system prune -af

